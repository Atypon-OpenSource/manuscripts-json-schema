{
  "$id": "MPCorrection.json",
  "title": "Correction",
  "description": "A record of a propsed correction to a Manuscript. The data to actually apply the change is stored in an MPCommit",
  "type": "object",
  "$mash": {
    "sources": [
      { "$ref": "abstract/MPModel.json#" },
      { "$ref": "mixins/MPManuscriptDocument.json#" },
      { "$ref": "mixins/MPContainedDocument.json#" }
    ],
    "with": {
      "properties": {
        "objectType": {
          "type": "string",
          "enum": ["MPCorrection"]
        },
        "status": {
          "type": "object",
          "properties": {
            "label": {
              "type": "string",
              "enum": ["proposed", "accepted", "rejected"]
            },
            "editorProfileID": {
              "allOf": [
                {
                  "$ref": "strings.json#/definitions/_id"
                },
                {
                  "type": "string",
                  "pattern": "^MPUserProfile:"
                }
              ]
            }
          },
          "required": ["label", "editorProfileID"],
          "additionalProperties": false
        },
        "snapshotID": {
          "allOf": [
            {
              "$ref": "strings.json#/definitions/_id"
            }
          ]
        },
        "positionInSnapshot": {
          "type": "number",
          "description": "The position in the snaphot/ancestor document where the change occurred."
        },
        "insertion": {
          "type": "string",
          "description": "A plain text snippet of the text added"
        },
        "deletion": {
          "type": "string",
          "description": "A plain text snippet of the text removed"
        },
        "commitChangeID": {
          "type": "string",
          "pattern": "[0-9a-zA-Z\\-]+",
          "description": "A permanent identifier for the change, which is stable across rebases"
        }
      },
      "required": ["status", "snapshotID", "commitChangeID"]
    }
  }
}
